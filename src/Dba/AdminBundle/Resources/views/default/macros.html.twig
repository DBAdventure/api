{% macro pagination(nbPages, currentPage, routeName, routeParams) %}
  {% if nbPages > 1 %}
    <nav class="text-center">
      <ul class="pagination">
        {% if currentPage > 1  %}
          <li class="page-item">
            <a class="page-link" href="{{ path(routeName, ((routeParams|default({})) | merge({"page": currentPage - 1}))) }}" aria-label="{{ 'previous' | trans }}">
              <span aria-hidden="true">&laquo;</span>
              <span class="sr-only">{{ 'previous' | trans }}</span>
            </a>
          </li>
        {% endif %}

        {% for p in range(max(currentPage - 2, 1), min(currentPage + 2, nbPages)) %}
          <li class="page-item{% if currentPage == p %} active{% endif %}">
            <a class="page-link" href="{{ path(routeName, ((routeParams|default({})) | merge({"page": p}))) }}">{{ p }}</a>
          </li>
        {% endfor %}

        {% if currentPage < nbPages %}
          <li class="page-item">
            <a class="page-link" href="{{ path(routeName, ((routeParams|default({})) | merge({"page": currentPage + 1}))) }}" aria-label="{{ 'next' | trans }}">
              <span aria-hidden="true">&raquo;</span>
              <span class="sr-only">{{ 'next' | trans }}</span>
            </a>
          </li>
        {% endif %}
      </ul>
    </nav>
  {% endif %}
{% endmacro %}

{% macro displayBonus(object) %}
  {% if object.bonus is not empty %}
    <ul>
      {% for key, value in object.bonus %}
        <li>
          {{ ('object.' ~ key) | trans({"%value%": value}, "objects") }}
        </li>
      {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}

{% macro displayRequirements(object) %}
  {% if object.requirements is not empty %}
    <ul>
      {% for key, value in object.requirements %}
        <li>
          {{ ('object.' ~ key) | trans({"%value%": value}, "objects") }}
        </li>
      {% endfor %}
    </ul>
  {% endif %}
{% endmacro %}

{% macro widget_prototype(widget, key='key', value='value') %}
  {% if widget.vars.prototype is defined %}
    {% set id = widget.vars.prototype.vars.id %}
    {% set key = attribute(widget.vars.prototype, key) %}
    {% set value = attribute(widget.vars.prototype, value) %}
  {% else %}
    {% set id = widget.vars.id %}
    {% set key = attribute(widget, key) %}
    {% set value = attribute(widget, value) %}
  {% endif %}

  <div data-content="{{ id }}">
    <div class="form-group">
      {{ form_row(key) }}
    </div>
    <div class="form-group">
      {{ form_label(value) }}
      <div class="col-sm-8">
        <input type="text" class="form-control" required="required" name="{{ value.vars.full_name }}" id="{{ value.vars.id }}" value="{{ value.vars.value }}"/>
      </div>
      <div class="col-sm-2 text-right">
        <button type="button" class="btn btn-default btn-sm btn-remove" data-related="{{ id }}">
          <span class="glyphicon glyphicon-remove btn-remove" aria-hidden="true"></span>
        </button>
      </div>
    </div>
  </div>
{% endmacro %}

{% macro simple_widget_prototype(widget) %}
  {% if widget.vars.prototype is defined %}
    {% set id = widget.vars.prototype.vars.id %}
  {% else %}
    {% set id = widget.vars.id %}
  {% endif %}

  <div data-content="{{ id }}">
    <div class="form-group">
      <div class="col-sm-10">
        {{ form_widget(widget) }}
      </div>

      <div class="col-sm-2 text-right">
        <button type="button" class="btn btn-default btn-sm btn-remove" data-related="{{ id }}">
          <span class="glyphicon glyphicon-remove btn-remove" aria-hidden="true"></span>
        </button>
      </div>
    </div>
  </div>
{% endmacro %}
